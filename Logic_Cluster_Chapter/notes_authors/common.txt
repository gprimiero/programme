Common issues:

- relation model-implementation: dependence or independence
- program vs. model of programs
- distinct linguistic levels of formulations for the same program
- dependence of programs from logic
- dual-nature of programs
- notion of logic contenxtual on practices
- types: in logic and in programming
- perfection/limitation vs. approximation/improvement (?) -- errors and misocmputations
- the role of formal methods in removing opacity and in closing communication gaps
- logic as specification
- the what (specification) and the how (implementation), (in my terminology the blueprint and the design)-- see programming paradigm

--- Mathematical definitions of
functions are to be read axiomatically and provide no mechanism of evalua-
tion. Lazy evaluation allows the language run-time to discard sub-expressions
that are not directly linked to the final result of the expression. It reduces the
time complexity of an algorithm by discarding the temporary computations and
conditionals etc. etc. None of this concerns the specification of the intended
function which is defintional and axiomatically given.


--- Kowalski at a special meeting of the Royal Society in London emphasises
the relationship between logic programs and specifications. He observe that
the only difference between a complete specification and a program is one of
efficiency.


-- complexity and evaluation as criteria distinguish specification and implementation

-- other level: physical execution


